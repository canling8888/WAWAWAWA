name: Process (push to Gist)

on:
  workflow_dispatch: {}     # 手动触发；需要定时可再加 cron

jobs:
  process:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install deps
        run: pip install -r requirements.txt

      # 运行时生成 config.json，并把 Gist 推送配置注入进去
      - name: Prepare config.json and inject Gist push
        env:
          GIST_LINK: ${{ secrets.GIST_LINK }}  # 只填 Gist 的 ID（URL 最后那串）
          GIST_PAT: ${{ secrets.GIST_PAT }}    # Classic PAT，勾选了 gist 权限
        run: |
          cp -f subscribe/config/config.default.json subscribe/config/config.json
          sudo apt-get update && sudo apt-get install -y jq
          # 1) 新增 storages 里一个名为 gist 的推送目标（type/id/token/files）
          # 2) 把所有 domains[*].push_to 指向 ["gist"]
          # 默认推 dist/clash.yaml 到 Gist 的 clash.yaml；有其它文件按需再加一行
          jq --arg id "$GIST_LINK" --arg tk "$GIST_PAT" '
            .storages = [
              {
                "name":"gist",
                "type":"gist",
                "id": $id,
                "token": $tk,
                "files": [
                  {"from":"dist/clash.yaml","to":"clash.yaml"}
                ]
              }
            ]
            | .domains = ( (.domains // []) | map( .push_to = ["gist"] ) )
          ' subscribe/config/config.json > tmp.json && mv tmp.json subscribe/config/config.json

      - name: Run process.py
        run: python -u subscribe/process.py --overwrite

      # 备份输出，方便你在 Actions 里直接下载
      - name: Upload outputs (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          if-no-files-found: warn
