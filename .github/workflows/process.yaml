name: Process
on:
  schedule:
    - cron: "05 03 * * *"
    - cron: "05 11 * * *"
  workflow_dispatch:

env:
  TZ: Asia/Shanghai
  SUBSCRIBE_CONF: ${{ secrets.SUBSCRIBE_CONF }}
  PUSH_TOKEN: ${{ secrets.PUSH_TOKEN }}
  REACHABLE: ${{ vars.REACHABLE }}
  SKIP_ALIVE_CHECK: ${{ vars.SKIP_ALIVE_CHECK }}
  SKIP_REMARK: ${{ vars.SKIP_REMARK }}
  WORKFLOW_MODE: ${{ vars.WORKFLOW_MODE }}
  ENABLE_SPECIAL_PROTOCOLS: ${{ vars.ENABLE_SPECIAL_PROTOCOLS }}

jobs:
  process:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Prepare
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          architecture: "x64"
          cache: "pip"

      - name: Install
        run: pip3 install -r requirements.txt

      # === 在这里插入（新增） ===
      - name: Install jq (for JSON editing)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Build runtime config.json (inject push->gist)
        env:
          GIST_LINK: ${{ secrets.GIST_LINK }}   # 建议填 Gist 的 ID（链接最后那段）
          GIST_PAT:  ${{ secrets.GIST_PAT }}    # 需要 Gists: Read & write 权限
        run: |
          set -eux
          # 1) 复制默认配置
          cp subscribe/config/config.default.json config.json

          # 2) 注入 Gist 推送配置（产物在根目录：clash.yaml）
          jq --arg tok "${GIST_PAT}" --arg id "${GIST_LINK}" '
            .storage.engine = "gist" |
            .storage.base   = "https://api.github.com" |
            .storage.domain = "https://gist.github.com" |
            .storage.token  = $tok |
            .storage.items  = {
              "xxx-clash": { "id": $id, "filename": "clash.yaml" }
            }
          ' config.json > config.tmp && mv config.tmp config.json

          echo "==== resolved storage (token redacted) ===="
          sed -E 's/"token"\s*:\s*"[^"]+"/"token":"***"/' config.json
      # === 插入结束 ===

      - name: Process
        run: |
          python -u subscribe/process.py --config config.json --overwrite

      - name: Timestamp
        run: date
