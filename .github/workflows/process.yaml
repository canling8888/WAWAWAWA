name: Process

on:
  workflow_dispatch:
    inputs:
      skip_alive_check:
        description: 'Skip liveness check for first runs (true/false)'
        required: false
        default: 'true'
  schedule:
    # 北京/台北时区(+08:00)：每天 11:05 和 19:05 跑
    - cron: '05 03 * * *'
    - cron: '05 11 * * *'

jobs:
  process:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      # —— 这些来自你仓库的 Variables/Secrets ——
      GH_USERNAME: ${{ vars.GH_USERNAME }}
      GIST_ID: ${{ vars.GIST_ID }}
      GIST_PAT: ${{ secrets.GIST_PAT }}

      # 首次建议跳过存活检测，稳妥产出；后续你可改为 false
      SKIP_ALIVE_CHECK: ${{ github.event.inputs.skip_alive_check || 'true' }}

      # 目标文件名（可以改）
      CLASH_FILE: clash.yaml
      SINGBOX_FILE: singbox.json
      V2RAY_FILE: v2ray.txt
      CRAWLED_SUBS_FILE: crawledsubs.txt
      CRAWLED_PROXIES_FILE: crawledproxies.txt

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate config.json (inline, based on your template)
        shell: bash
        run: |
          if [ -z "$GH_USERNAME" ] || [ -z "$GIST_ID" ]; then
            echo "GH_USERNAME or GIST_ID is empty. Set repository Variables first."
            exit 1
          fi

          cat > config.json <<EOF
          {
            "domains": [],
            "crawl": {
              "enable": true,
              "exclude": "",
              "threshold": 5,
              "singlelink": true,
              "persist": {
                "subs": "crawledsubs",
                "proxies": "crawledproxies"
              },
              "config": {
                "rename": "",
                "include": "",
                "exclude": ""
              },
              "telegram": {
                "enable": false,
                "pages": 5,
                "exclude": "",
                "users": {
                  "channel": {
                    "include": "",
                    "exclude": "",
                    "config": {
                      "rename": ""
                    },
                    "push_to": []
                  }
                }
              },
              "google": {
                "enable": false,
                "exclude": "",
                "notinurl": [],
                "push_to": []
              },
              "github": {
                "enable": true,
                "pages": 2,
                "push_to": ["xxx-clash"],
                "exclude": "",
                "spams": []
              },
              "twitter": {
                "enable": false,
                "users": {
                  "username": {
                    "enable": true,
                    "num": 30,
                    "include": "",
                    "exclude": "",
                    "config": {
                      "rename": ""
                    },
                    "push_to": []
                  }
                }
              },
              "repositories": [
                {
                  "enable": false,
                  "username": "",
                  "repo_name": "",
                  "commits": 3,
                  "exclude": "",
                  "push_to": []
                }
              ],
              "pages": [
                {
                  "enable": false,
                  "url": "",
                  "include": "",
                  "exclude": "",
                  "config": {
                    "rename": ""
                  },
                  "push_to": []
                }
              ],
              "scripts": [
                {
                  "enable": false,
                  "script": "file#function",
                  "params": {
                    "persist": {
                      "fileid": ""
                    },
                    "any": "xxx",
                    "config": {
                      "enable": true,
                      "liveness": true,
                      "exclude": "",
                      "rename": "",
                      "push_to": []
                    }
                  }
                }
              ]
            },
            "groups": {
              "xxx": {
                "emoji": true,
                "list": true,
                "targets": {
                  "clash": "xxx-clash"
                },
                "regularize": {
                  "enable": false,
                  "locate": true,
                  "bits": 2
                }
              }
            },
            "storage": {
              "engine": "gist",
              "base": "https://api.github.com",
              "domain": "https://gist.github.com",
              "items": {
                "xxx-clash": {
                  "username": "${GH_USERNAME}",
                  "gistid": "${GIST_ID}",
                  "fileid": "${CLASH_FILE}"
                },
                "crawledsubs": {
                  "username": "${GH_USERNAME}",
                  "gistid": "${GIST_ID}",
                  "fileid": "${CRAWLED_SUBS_FILE}"
                },
                "crawledproxies": {
                  "username": "${GH_USERNAME}",
                  "gistid": "${GIST_ID}",
                  "fileid": "${CRAWLED_PROXIES_FILE}"
                }
              }
            },
            "update": {
              "remark": true
            },
            "delay": 5000
          }
          EOF

          echo "config.json generated:"
          cat config.json

      - name: Create .env for token
        run: |
          cat > .env <<EOF
          GIST_PAT=${GIST_PAT}
          SKIP_ALIVE_CHECK=${SKIP_ALIVE_CHECK}
          EOF
          echo ".env created"

      - name: Run process.py
        run: |
          set -euxo pipefail
          python process.py --server ./config.json --overwrite --num 64 --timeout 5000 --url https://www.google.com/generate_204

      - name: Upload local outputs for debugging (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: process-local-artifacts
          path: |
            data/**
            subconverter/**
          if-no-files-found: ignore
