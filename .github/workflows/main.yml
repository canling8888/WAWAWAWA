name: Process (push to Gist)

on:
  workflow_dispatch: {}

jobs:
  process:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install deps
        run: pip install -r requirements.txt

      # 运行时生成 config.json，并注入 Gist 推送配置（不改 default）
      - name: Prepare config.json and inject Gist push
        env:
          GIST_LINK: ${{ secrets.GIST_LINK }}   # 只放ID，别放整条URL
          GIST_PAT:  ${{ secrets.GIST_PAT }}    # Classic PAT，勾选 gist
        run: |
          cp -f subscribe/config/config.default.json subscribe/config/config.json
          sudo apt-get update && sudo apt-get install -y jq

          # 1) 新建 storages[gist]；2) 所有 domains[*].push_to = ["gist"]
          # 兼容某些版本：同时复制一份到 .storage（有些代码用单数）
          jq --arg id "$GIST_LINK" --arg tk "$GIST_PAT" '
            .storages = [
              {
                "name":"gist",
                "type":"gist",
                "id": $id,
                "token": $tk,
                "files": [
                  {"from":"dist/clash.yaml","to":"clash.yaml"}
                ]
              }
            ]
            | .storage = .storages
            | .domains = ( (.domains // []) | map( .push_to = ["gist"] ) )
          ' subscribe/config/config.json > tmp.json && mv tmp.json subscribe/config/config.json

          # 打印去敏的关键字段，确认注入成功（不会泄露token）
          jq '{
              storages: (.storages | map({name, type, id, files})),
              domains:  (.domains  | map({name, push_to}))
            }' subscribe/config/config.json

      - name: Run process.py
        run: python -u subscribe/process.py --overwrite

      # 列出产物，方便你核对到底生成了哪些文件
      - name: List outputs
        run: |
          ls -lah
          ls -lah dist || true

      # 兜底：直接用第三方 Action 把 dist/clash.yaml 推到 Gist
      # （即使内置 push 失效，也能保证更新）
      - name: Force update Gist (fallback)
        if: success()
        uses: exuanbo/actions-deploy-gist@v1
        with:
          token: ${{ secrets.GIST_PAT }}
          gist_id: ${{ secrets.GIST_LINK }}
          file_path: dist/clash.yaml
          file_name: clash.yaml

      # 备份：把 dist 打成 Artifact
      - name: Upload outputs (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          if-no-files-found: warn
